# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from faker import Faker
fake = Faker()


class TestRegistration():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_registration(self):
    # Test name: registration
    # Step # | name | target | value
    # 1 | open | / | 
    self.driver.get("http://localhost:5000/")
    # 2 | setWindowSize | 866x960 | 
    self.driver.set_window_size(866, 960)
    # 3 | click | linkText=sign up | 
    self.driver.find_element(By.LINK_TEXT, "sign up").click()
    # 7 | type | id=username | amine
    name=fake.first_name()
    lastname=fake.last_name()
    print('name is:'+name+' lastname is:'+lastname)
    self.driver.find_element(By.ID, "username").send_keys(name)
    # 8 | click | id=password | 
    self.driver.find_element(By.ID, "password").click()
    # 9 | type | id=password | 
    password= fake.password()
    print('password is:'+password)
    self.driver.find_element(By.ID, "password").send_keys(password)
    # 10 | click | id=email | 
    self.driver.find_element(By.ID, "email").click()
    # 11 | type | id=email | amine@amine.com
    email=fake.ascii_email()
    print('email is:'+email)
    self.driver.find_element(By.ID, "email").send_keys(email)
    # 12 | click | id=firstname | 
    self.driver.find_element(By.ID, "firstname").click()
    # 13 | type | id=firstname | amine
    self.driver.find_element(By.ID, "firstname").send_keys(name)
    # 14 | type | id=lastname | eloudrhiri
    self.driver.find_element(By.ID, "lastname").send_keys(lastname)
    # 19 | mouseUpAt | css=.box | 82,17.6041259765625
    element = self.driver.find_element(By.CSS_SELECTOR, ".box").click()
    # 11 | click | id=username | 
    self.driver.find_element(By.ID, "username").click()
    # 12 | click | id=password | 
    self.driver.find_element(By.ID, "password").click()
    # actions = ActionChains(self.driver)
    # actions.move_to_element(element).release().perform()


  
